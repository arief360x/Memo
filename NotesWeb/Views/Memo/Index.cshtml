@model IEnumerable<MemoModel>
@{
    ViewData["Title"] = "Index";
}


<div class="container p-3">
    <div class = "row pt-4">

        <div class="col-6">
            <h1 class="text-primary">Your Memo</h1>
        </div>

        <div class="col-6 text-end">
            <a asp-controller="Memo" asp-action="Create" class="btn btn-primary"><i class="bi bi-file-earmark-plus"></i>&nbsp; Create New Memo</a>
        </div>
    </div>
</div>


<table class = "table table-bordered table-striped" style="width:100%">
    <thead>
        <tr>
            <th>Category</th>
            <th>Content</th>
            <th>Last Modified</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var obj in Model)
        {
            <tr>
                <td width="30%">
                    @obj.MemoCategory
                </td>
                @*<td width="55%">
                    @DisplayShort(obj.MemoContent);
                    @obj.MemoContent
                </td>*@
                <td width="45%">
                    @DisplayShort(obj.MemoContent)
                </td>
                <td width="15%">
                    @obj.MemoCreatedTime.ToString("ddd, dd MMM yyy HH':'mm")
                </td>
                <td>
                    @*container for edit and delete*@
                    <div class="w-75 btn-group" role="group">
                        <a asp-controller="Memo" asp-action="Edit" asp-route-id="@obj.Id">Edit</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>




@functions{
    public object DisplayShort(string contents)
    {
        const int maxLength = 15;

        var counter = 0;
        var words = contents.Split(' ');
        if(words.Length <= maxLength){
            return contents;
        }
        var contentDisplay = new List<string>();
        contentDisplay.Add(words.Length.ToString());
        //contentDisplay.Add(contents.Length.ToString());

        foreach (var word in words)
        {
            if (counter < maxLength)
            {
                counter++;
                contentDisplay.Add(word);
            }
            else
            {
                break;
            }
        }


        var displayString = String.Join(' ', contentDisplay);
        displayString += "...";
        Console.WriteLine(displayString);
        return displayString;
    }
}

